{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import*as viewState from\"../../../store/modules/viewState\";import ChangeViewMode from\"./ChangeViewMode\";import{jsx as _jsx}from\"react/jsx-runtime\";const ChangeViewModeContainer=props=>{return/*#__PURE__*/_jsx(ChangeViewMode,{onChange:props.changeViewMode});};const mapStateToProps=state=>{return state;};const mapDispatchToProps=dispatch=>({changeViewMode:mode=>dispatch(viewState.ChangeViewMode(mode))});export default connect(mapStateToProps,mapDispatchToProps)(ChangeViewModeContainer);","map":{"version":3,"names":["React","connect","viewState","ChangeViewMode","jsx","_jsx","ChangeViewModeContainer","props","onChange","changeViewMode","mapStateToProps","state","mapDispatchToProps","dispatch","mode"],"sources":["/Users/ohkyungtae/Desktop/react/Dowap2.github.io/src/Blog/Main/List/ChangeViewModeContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as viewState from \"../../../store/modules/viewState\";\nimport ChangeViewMode from \"./ChangeViewMode\";\n\nconst ChangeViewModeContainer = props => {\n  return <ChangeViewMode onChange={props.changeViewMode} />;\n};\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  changeViewMode: mode => dispatch(viewState.ChangeViewMode(mode))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChangeViewModeContainer);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,aAAa,CACrC,MAAO,GAAK,CAAAC,SAAS,KAAM,kCAAkC,CAC7D,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9C,KAAM,CAAAC,uBAAuB,CAAGC,KAAK,EAAI,CACvC,mBAAOF,IAAA,CAACF,cAAc,EAACK,QAAQ,CAAED,KAAK,CAACE,cAAe,CAAE,CAAC,CAC3D,CAAC,CAED,KAAM,CAAAC,eAAe,CAAGC,KAAK,EAAI,CAC/B,MAAO,CAAAA,KAAK,CACd,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAGC,QAAQ,GAAK,CACtCJ,cAAc,CAAEK,IAAI,EAAID,QAAQ,CAACX,SAAS,CAACC,cAAc,CAACW,IAAI,CAAC,CACjE,CAAC,CAAC,CAEF,cAAe,CAAAb,OAAO,CACpBS,eAAe,CACfE,kBACF,CAAC,CAACN,uBAAuB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}