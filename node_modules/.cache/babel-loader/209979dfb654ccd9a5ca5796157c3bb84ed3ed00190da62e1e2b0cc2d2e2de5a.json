{"ast":null,"code":"import React from\"react\";import{connect}from\"react-redux\";import*as languageActions from\"../../store/modules/languageState\";import{InputLanguage}from\"./InputLanguage\";import{jsx as _jsx}from\"react/jsx-runtime\";const InputLanguageContainer=props=>{return/*#__PURE__*/_jsx(InputLanguage,{onChange:props.language});};const mapStateToProps=state=>{return state;};const mapDispatchToProps=dispatch=>({language:language=>dispatch(languageActions.ChangeLanguage(language))});export default connect(mapStateToProps,mapDispatchToProps)(InputLanguageContainer);","map":{"version":3,"names":["React","connect","languageActions","InputLanguage","jsx","_jsx","InputLanguageContainer","props","onChange","language","mapStateToProps","state","mapDispatchToProps","dispatch","ChangeLanguage"],"sources":["/Users/ohkyungtae/Desktop/react/Dowap2.github.io/src/Blog/Footer/InputLanguageContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as languageActions from \"../../store/modules/languageState\";\nimport { InputLanguage } from \"./InputLanguage\";\n\nconst InputLanguageContainer = props => {\n  return <InputLanguage onChange={props.language} />;\n};\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  language: language => dispatch(languageActions.ChangeLanguage(language))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InputLanguageContainer);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,aAAa,CACrC,MAAO,GAAK,CAAAC,eAAe,KAAM,mCAAmC,CACpE,OAASC,aAAa,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhD,KAAM,CAAAC,sBAAsB,CAAGC,KAAK,EAAI,CACtC,mBAAOF,IAAA,CAACF,aAAa,EAACK,QAAQ,CAAED,KAAK,CAACE,QAAS,CAAE,CAAC,CACpD,CAAC,CAED,KAAM,CAAAC,eAAe,CAAGC,KAAK,EAAI,CAC/B,MAAO,CAAAA,KAAK,CACd,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAGC,QAAQ,GAAK,CACtCJ,QAAQ,CAAEA,QAAQ,EAAII,QAAQ,CAACX,eAAe,CAACY,cAAc,CAACL,QAAQ,CAAC,CACzE,CAAC,CAAC,CAEF,cAAe,CAAAR,OAAO,CACpBS,eAAe,CACfE,kBACF,CAAC,CAACN,sBAAsB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}